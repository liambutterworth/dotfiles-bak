#
# HTML Snippets
#
# :: Functions
# :: Document
# :: Outline
# :: Inline
# :: Table
# :: Form

#
# Functions
#

global !p

def getAttr(string):
    idAttr    = getIdAttr(string)
    classAttr = getClassAttr(string)
    otherAttr = getOtherAttr(string)

    return idAttr + classAttr + otherAttr

def getIdAttr(string):
    value = getId(string)
    return ' id="' + value + '"' if value else ''

def getClassAttr(string):
    value = getClass(string)
    return ' class="' + value + '"' if value else ''

def getOtherAttr(string):
    match = re.match( '(?:\:)([^#.]+)', string )
    array = list( filter( None, re.split( ',', match.group(1) ) ) )
    attrs = []

    for substring in array:
        key, value = substring.split( '=' )
        attrs.append( f'{key}="{value}"' )

    return ' ' + ' '.join( attrs ) if attrs else ''

def getId(string):
    match = re.match('#([^#.]+)', string)
    return match.group(1) if match else ''

def getClass(string):
    array   = list( filter( None, re.split( '((?:#|\.)[^#.]+)', string ) ) )
    classes = []

    for substring in array:
        match = re.match('\.([^#.]+)', substring)
        if match: classes.append( match.group(1) )

    return ' '.join( classes ) if classes else ''

def expandSymbol(symbol):
    if symbol == '#':
        return 'id'
    elif symbol == '.':
        return 'class'

def getClassOrId(symbol, string):
    if not string:
        return ''
    elif symbol == '#':
        match = re.match("(?:#)([^.]+)", string)
        return match.group(1)
    elif symbol == '.':
        match = re.match("(?:.)([^#]+)", string)
        return match.group(1)

def readable(var):
    var = re.sub('[-_]', ' ', var)
    var = re.sub('([A-Z])', r' \1', var)
    return var.title()

endglobal

#
# Document
#

snippet doc "<DOCTYPE>"
<!DOCTYPE html>
endsnippet

snippet html "<html>"
<html lang="en">
    ${VISUAL}$0
</html>
endsnippet

snippet head "<head>"
<head>
    ${VISUAL}$0
</head>
endsnippet

snippet meta "meta tags"
<meta charset="utf-8" />
<meta http-equiv="x-ua-compatible" content="ie-edge" />
<meta name="viewport" content="width=device-width,intial-scale=1" />
<meta name="description" content="" />
<title>$0</title>
endsnippet

snippet body "<body>"
<body>
    ${VISUAL}$0
</body>
endsnippet

snippet title "<title>"
<title>$0</title>
endsnippet

snippet link "<link>"
<link rel="${2:stylesheet}" href="$0" />
endsnippet

snippet style "<style>"
<style>
    ${VISUAL}$0
</style>
endsnippet

snippet script "<script>"
<script>
    ${VISUAL}$0
</script>
endsnippet

snippet script/ "<script> include"
<script src="$0"></script>
endsnippet

#
# Outline
#

snippet "(?:^|\s)t\b(.*)" "<tag>" r
<${1:tag}`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</$1>
endsnippet

snippet "(?:^|\s)div(.*)" "<div>" r
<div`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</div>
endsnippet

snippet "(?:^|\s)header(.*)" "<header>" r
<header`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</header>
endsnippet

snippet "(?:^|\s)footer(.*)" "<footer>" r
<footer`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</footer>
endsnippet

snippet "(?:^|\s)main(.*)" "<main>" r
<main`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</main>
endsnippet

snippet "(?:^|\s)nav(.*)" "<nav>" r
<nav`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</nav>
endsnippet

snippet "(?:^|\s)section(.*)" "<section>" r
<section`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</section>
endsnippet

snippet "(?:^|\s)article(.*)" "<article>" r
<article`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</article>
endsnippet

snippet "(?:^|\s)aside(.*)" "<aside>" r
<aside`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</aside>
endsnippet

snippet "(?:^|\s)h1(.*)" "<h1>" r
<h1`!p snip.rv=getAttr(match.group(1))`>$0</h1>
endsnippet

snippet "(?:^|\s)h2(.*)" "<h2>" r
<h2`!p snip.rv=getAttr(match.group(1))`>$0</h2>
endsnippet

snippet "(?:^|\s)h3(.*)" "<h3>" r
<h3`!p snip.rv=getAttr(match.group(1))`>$0</h3>
endsnippet

snippet "(?:^|\s)h4(.*)" "<h4>" r
<h4`!p snip.rv=getAttr(match.group(1))`>$0</h4>
endsnippet

snippet "(?:^|\s)h5(.*)" "<h5>" r
<h5`!p snip.rv=getAttr(match.group(1))`>$0</h5>
endsnippet

snippet "(?:^|\s)h6(.*)" "<h6>" r
<h6`!p snip.rv=getAttr(match.group(1))`>$0</h6>
endsnippet

snippet "(?:^|\s)p(.*)" "<p>" r
<p`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</p>
endsnippet

#
# Inline
#

snippet "(?:^|\s)span(.*)" "<span>" r
<span`!p snip.rv=getAttr(match.group(1))`>$0<span>
endsnippet

snippet "(?:^|\s)a(.*)" "<a>" r
<a`!p snip.rv=getAttr(match.group(1))` href="$1">${VISUAL}$0</a>
endsnippet

snippet "(?:^|\s)img(.*)" "<img>" r
<img`!p snip.rv=getAttr(match.group(1))` src="$1" alt="$0" />
endsnippet

snippet "(?:^|\s)ul(.*)" "<ul>" r
<ul`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</ul>
endsnippet

snippet "(?:^|\s)li\b(.*)" "<li>" r
<li`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</li>
endsnippet

snippet "(?:^|\s)address(.*)" "<address>" r
<address`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</address>
endsnippet

snippet "(?:^|\s)small(.*)" "<small>" r
<small`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</small>
endsnippet

snippet "(?:^|\s)strong(.*)" "<strong>" r
<strong`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</strong>
endsnippet

snippet "(?:^|\s)em(.*)" "<em>" r
<em`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</em>
endsnippet

#
# Table
#

snippet "(?:^|\s)table(.*)" "<table>" r
<table`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</table>
endsnippet

snippet "(?:^|\s)thead(.*)" "<thead>" r
<thead`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</thead>
endsnippet

snippet "(?:^|\s)tbody(.*)" "<tbody>" r
<tbody`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</tbody>
endsnippet

snippet "(?:^|\s)tfoot(.*)" "<tfoot>" r
<tfoot`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</tfooet>
endsnippet

snippet "(?:^|\s)th(.*)" "<th>" r
<th`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</th>
endsnippet

snippet "(?:^|\s)td(.*)" "<td>" r
<td`!p snip.rv=getAttr(match.group(1))`>${VISUAL}$0</td>
endsnippet

#
# Form
#

snippet "(?:^|\s)form(.*)" "<form>" r
<form`!p snip.rv=getAttr(match.group(1))` action="$1"${2: method="${3:get}"}>
    ${VISUAL}$0
</form>
endsnippet

snippet "(?:^|\s)field(.*)" "<fieldset>" r
<fieldset`!p snip.rv=getAttr(match.group(1))`>
    ${VISUAL}$0
</fieldset>
endsnippet

snippet "(?:^|\s)label(.*)" "<label>" r
<label`!p snip.rv=getAttr(match.group(1))` for="$1">${0:`!p snip.rv=readable(t[1])`}</label>
endsnippet

snippet "(?:^|\s)input(.*)" "<input>" r
<input`!p snip.rv=getAttr(match.group(1))` name"${2:$1}" type="${3}" $0/>
endsnippet

snippet "(?:^|\s)linput(.*)" "<input> with <label>" r
<label for="${1:`!p snip.rv=getId(match.group(1))`}">${2:`!p snip.rv=readable(t[1])`}</label>
<input id="$1"`!p snip.rv=getClassAttr(match.group(1))` name="${3:$1}" type="${4:text}" $0/>
endsnippet

snippet "(?:^|\s)check(.*)" "checkbox <input>" r
<input`!p snip.rv=getAttr(match.group(1))` name="${1:`!p snip.rv=getId(match.group(1))`}" type="checkbox" value="$3" $0/>
endsnippet

snippet lcheck "checkbox <input> with label"
<input id="$1" name="${2:$1}" type="checkbox" value="$3" $4/>
<label for="$1">${0:`!p snip.rv=readable(t[1])`}</label>
endsnippet

snippet radio "radio <input>"
<input id="$1" name="${2:$1}" type="radio" value="$3" $0/>
endsnippet

snippet lradio "radio <input> with label"
<input id="$1" name="${2:$1}" type="radio" value="$3" $4/>
<label for="$1">${0:`!p snip.rv=readable(t[1])`}</label>
endsnippet

snippet "(?:^|\s)text(.*)" "<textarea>" r
<textarea`!p snip.rv=getAttr(match.group(1))` name="${1:`!p snip.rv=getId(match.group(1))`}">${VISUAL}$0</textarea>
endsnippet

snippet "(?:^|\s)ltext(.*)" "<textarea> with <label>" r
<label for="${1:`!p snip.rv=getId(match.group(1))`}">${2:`!p snip.rv=readable(t[1])`}</label>
<textarea id="$1" name="${3:$1}">$0</textarea>
endsnippet

snippet "(?:^|\s)select(.*)" "<select>" r
<select`!p snip.rv=getAttr(match.group(1))` name="${2:`!p snip.rv=getId(match.group(1))`}">
    ${VISUAL}$0
</select>
endsnippet

snippet "(?:^|\s)optgroup(.*)" "<optgroup>" r
<optgroup`!p snip.rv=getAttr(match.group(1))` label="$1">
    ${VISUAL}$0
</optgroup>
endsnippet

snippet "(?:^|\s)option(.*)" "<option>" r
<option`!p snip.rv=getAttr(match.group(1))` value="$1">${0:`!p snip.rv=readable(t[1])`}</option>
endsnippet

snippet "(?:^|\s)button(.*)" "<button>" r
<button`!p snip.rv=getAttr(match.group(1))`${1: type="${2:button}"}>$0</button>
endsnippet
