#
# PHP Snippets
#
# :: Tags
# :: Doc
# :: Classes
# :: Functions
# :: Conditionals
# :: Loops

#
# Tags
#

snippet ? "php tags" b
<?php

${VISUAL}$0
endsnippet

snippet ?? "php tags with closing tag" b
<?php
    ${VISUAL}$0
?>
endsnippet

snippet ?- "inline tags" b
<?php ${VISUAL}$0 ?>
endsnippet

snippet ?= "inline tags echo" b
<?php echo ${VISUAL}$0; ?>
endsnippet

#
# Doc
#

snippet / "doc block" b
/**
 * $1
 */
endsnippet

snippet // "expanded doc block" b
/**
 * ${1:Description}
 *
 * @param ${2:type} $${3:name} ${4:Description}
 * @return ${0:void}
 */
endsnippet

snippet $/ "expanded doc block for variable" b
/**
 * ${1:Description}
 *
 * @var ${0:type}
 */
endsnippet

#
# Classes
#

snippet class "class" b
class ${1:`!p snip.rv=snip.basename`}
{
    ${VISUAL}$0
}
endsnippet

snippet new "new instance" b
$${1:class} = new ${0:${1/\w+\s*/\u$0/}}($3)
endsnippet

snippet get "class getter" b
/**
 * Getter for $1
 *
 * @return ${2:string}
 */
public function get${1/\w+\s*/\u$0/}()`!p snip.rv = ': '+t[2]`
{
    return $this->$1;
}
endsnippet

snippet set "class setter" b
/**
 * Setter for $1
 *
 * @param ${2:string} $$1
 * @return ${3:`!p snip.rv=snip.basename`}
 */
public function set${1/\w+\s*/\u$0/}(${4:${2/(void|string|int|integer|double|float|object|boolear|null|mixed|number|resource)|(.*)/(?1::$2 )/}}$$1)
{
    $this->$1 = $$1;
    ${5:return $this;}
}
endsnippet

#
# Functions
#

snippet fn "function" b
function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet __ "contructor method" b
public function __construct($1)
{
    ${VISUAL}$0
}
endsnippet

snippet _/ "constructor method with docs" b
/**
 * ${1:Create a new `!p snip.rv=snip.basename` instance}
 *
 * @return void
 */
public function __construct($2)
{
    ${VISUAL}$0
}
endsnippet

snippet pub "public method" b
public function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pro "protected method" b
protected function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pri "private method" b
private function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pubs "public static method" b
public static function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pros "protected static method" b
protected static function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pris "private static method" b
private static function ${1:name}(${2:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet fn/ "function with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */
function ${3:name}(${4:$param})
{
   ${VISUAL}$0
}
endsnippet

snippet pub/ "public method with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */
public function ${3:name}(${4:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pro/ "protected method with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */

protected function ${3:name}(${4:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pri/ "private method with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */
private function ${3:name}(${4:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pubs/ "public static method with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */
public static function ${3:name}(${4:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pros/ "protected static method with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */
protected static function ${3:name}(${4:$param})
{
    ${VISUAL}$0
}
endsnippet

snippet pris/ "private static method with doc" b
/**
 * ${1:Description}
 *
 * @return ${2:void}
 */
private static function ${3:name}(${4:$param})
{
    ${VISUAL}$0
}
endsnippet

#
# Conditonals
#

snippet if "if conditional" b
if ($1) {
    ${VISUAL}$0
}
endsnippet

snippet if; "inline if conditional" b
if ($1) ${VISUAL}$0;
endsnippet

snippet ife "if else conditional"
if ($1) {
    ${2:${VISUAL}};
} else {
    $0;
}
endsnippet

snippet ifee "if else if condtional"
if ($1) {
    ${VISUAL}$2
} else if ($3) {
    $4
} else {
    $0
}
endsnippet

snippet sw "switch conditional" bm
switch ($1) {
    case $2:
        ${VISUAL}$0
        break;

    default:
        $3
}
endsnippet

snippet swc "switch case" b
case $1:
    ${VISUAL}$0;
    break;
endsnippet

snippet swd "switch default" b
default:
    ${VISUAL}$0;
endsnippet

#
# Loops
#

snippet for "for loop" b
for (${1:$${2:i}=${3:1}; $$2<=${4:3}; $$2${5:++}}) {
    ${VISUAL}$0
}
endsnippet

snippet for; "inline for loop" b
for (${1:$${2:i}=${3:1}; $$2<=${4:3}; $$2${5:++}}) ${VISUAL}$0
endsnippet

snippet foreach  "foreach loop" b
foreach (${1:key} as ${2:value}) {
    ${VISUAL}$0
}
endsnippet

snippet foreach; "inline foreach loop"
foreach (${1:key} as ${2:value}) ${VISUAL}$0
endsnippet

snippet do "do loop" b
do {
    ${VISUAL}$0
} while ($1);
endsnippet

snippet do; "inline do loop" b
do { ${VISUAL}$0 } while($1);
endsnippet
